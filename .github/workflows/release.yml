name: Verify and Release lib-version

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*' # Trigger workflow on tags like v1.0.0, v1.2.3, v1.2.3-alpha.1

jobs:
  # This job builds the package, runs tests, and verifies the version
  build-verify-release:
    name: Build, Verify, and Release
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      # Step 1: Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      # Step 3: Install build dependencies and test dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build pytest twine wheel setuptools-scm>=6.2

      # Step 4: Build the package using python -m build
      # setuptools_scm automatically embeds the version from the Git tag
      - name: Build package
        run: python -m build

      # Step 5: Install the built package THEN run tests
      - name: Install package and Run tests
        run: |
         echo "Installing built wheel from dist/..."
         pip install dist/*.whl

      # Step 6: Upload 'dist' contents as a workflow artifact
      - name: Upload distribution artifact for workflow run
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: lib-version-dist
          path: dist/

      # Step 7: Create GitHub Release and attach distribution files from dist/
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        if: success()
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: ${{ contains(github.ref_name, '-') }}
          body: |
            Automated release for version ${{ github.ref_name }}
          # This will upload the .whl and .tar.gz files (if python -m build creates both).
          files: |
            dist/*.whl
            dist/*.tar.gz
